// 1. displayWelcome
// This function should display the welcome message to the user explaining what the program does.
function displayWelcome() {
  console.log("\nThis program will determine the time to pay off a credit card and the interest paid based on ther current balance and the interest rate that was paid off as well.");
}
// 2. calculateMinimumPayment
// This function calculates the minimum payment. It should take balance and interest rate as arguments and return the
// minimum payment. So the value you display for minimum payment is the value you get from this method. Do not use a literal hardcoded
// value when you display the minimum payment!
function calculateMinimumPayment(balance, interestRate) {
  var minPayPmt = balance * interestRate;
  if ( minPayPmt < minMinimumPayment)
  {
    return minMinimumPayment
  }
  else
  {
    return minPayPmt;
  }
}
// 3. generatePaymentID:
// This should be a closure function that generates a new payment id for the payment. The function should remember
// the previous id and the new generated id should be the old one plus 1.
// The Object Technique will allow you to obtain the Golden Bow, demonstrate your mastery of the technique
// by completing Part 4 & 5 below.

function getNextPaymentID() {
  function generatePaymentID() {
    lastPaymentId++;
    return lastPaymentId; 
  }
  return generatePaymentID();
}


// 4. processPaymentSchedule
// This function displays the actual payment schedule. It should take the balance, monthly interest rate and minimum
// payment as arguments. 
// Use the 1500, 18% and 2% literal values below. Each time you calculate a new payment line, create an object literal
// with properties for the Year, Balance, Payment Id, and InterestPaid. 


// Pass this object literal to the displayPayment
// function. The paymentId should be generated by the generatePaymentID function each time.
// This program will determine the time to pay off a credit card and the interest paid based on the current
// balance, the interest rate, and the monthly payments made.


function processPaymentSchedule(balance, interestRate, minPayment) {
  var year = 0;
  var paymentNbr = 0;
  var interestPaid = 0;

  while(balance > 0) {
    paymentNbr++;
    if (paymentNbr % 12 == 1){
      year++;
    }

    var monthlyInterest = balance * interestRate / 12;
    balance = balance - (minPayment - monthlyInterest);
    interestPaid += monthlyInterest;

    if(balance < 0){
      balance = 0;
    }

    var payment = {
      Year: year,
      PaymentNbr: paymentNbr,
      Balance: balance,
      InterestPaid: interestPaid
    };
    displayPayment(payment);
  }
}
// 5. displayPayment
// This function should take the payment object literal and display it on the console.
function displayPayment(payment) {
  if(payment.PaymentNbr == 1) {
    console.log("\nPAYOFF SCHEDULE");
    console.log("_________________");
    console.log("Year    Balance   Payment ID    Interest Paid")
  }
  console.log((payment.PaymentNbr % 12 == 1 ? payment.Year : " ") + "$" + payment.Balance.toFixed(2) + "  " + getNextPaymentID() + "$" + payment.InterestPaid.toFixed(2));
}
// Balance on your credit card: 1500
var currentBalance = 1500.00;
// Interest Rate: 18
var yearlyInterestRate = 0.18;
// Assuming a minimum payment of 2% of the balance ($30 min)
var minPaymentInterestRate = 0.02;
// Your minimum payment would be $ 30.00
var minMinimumPayment = 30.00



var minimumPayment = calculateMinimumPayment(currentBalance, minPaymentInterestRate);

// Make the initial id 1.
var lastPaymentId = 0;

displayWelcome();
processPaymentSchedule(currentBalance, yearlyInterestRate, minimumPayment);
